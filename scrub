#!/usr/bin/env ruby

require 'json'
require 'set'

def scrub(sensitive_fields, data, within_sensitive_field = false)
  data.each do |key, value|
    if sensitive_fields.include?(key) || within_sensitive_field
      case value
      when String
        data[key] = value.gsub(/\w/, '*')
      when Numeric
        data[key] = value.to_s.gsub(/\w/, '*')
      when TrueClass, FalseClass
        data[key] = "-"
      when Array
        data[key] = value.map { |v| scrub(sensitive_fields, { key => v }, true)[key]}
      when Hash
        data[key] = scrub(sensitive_fields, value, true)
      end
    elsif value.is_a?(Hash)
      data[key] = scrub(sensitive_fields, value)
    elsif value.is_a?(Array)
      data[key] = value.map { |v| v.is_a?(Hash) ? scrub(sensitive_fields, v) : v }
    end
  end
  data
end

if ARGV.length != 2
  puts "Usage: scrub sensitive_fields.txt input.json"
  exit 1
end

sensitive_fields_file, input_json_file = ARGV

begin
  sensitive_fields = File.read(sensitive_fields_file).split("\n").to_set
  input_json = JSON.parse(File.read(input_json_file))
rescue StandardError => e
  puts "Error: #{e.message}"
  exit 1
end

scrubbed_json = scrub(sensitive_fields, input_json)

puts JSON.pretty_generate(scrubbed_json)